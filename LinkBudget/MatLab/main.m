clc
clear

%input:
%1. earth station latitude, + north, -south
%2. earth station longitude,+ east, -west
%3. satellite longitude, +east, -west
%output:
%1. slant_range in km
slant_range = geo(19.062, 72.874, 89.5);

%here you can change the uplink analysis required
%input
uplink_carrier_frequency_MHz = 145.8;
uplink_transmitter_input_power_W = 10;
transmitter_back_off_power_dB = 0;
uplink_transmitter_cable_loss_dB = 3.6;
uplink_transmitter_antenna_gain_dBi = 18.5;
uplink_transmitter_antenna_pointing_loss_dB = 0.5;
uplink_transmitter_antenna_polarization_loss_dB = 0.1;
uplink_atmospheric_losses_dB = 2.1;
uplink_ionospheric_losses_dB = 0.7;
uplink_rain_losses = 0;
uplink_receiving_satellite_antenna_pointing_loss_dB = 4.7;
uplink_satellite_antenna_gain_dBi = 2.2;
uplink_satellite_receiver_line_losses_dB = 2.0;
uplink_satelllte_receiver_noise_temperature_K = 261;
uplink_system_data_rate_bps = 4800;
uplink_threshold_Eb_N0_dB = 14.4;
uplink_receiver_bandwidth_Hz = 5000;
uplink_threshold_C_N_dB = 14.4;

%input:
%1. slant_range from geo.m
%2. carrier frequency (MHz)
%3. Transmitter input power (W)
%4. Transmitter back off power (dB)
%5. Transmitter cable loss (dB)
%6. Transmitter antenna gain (dBi)
%7. Transmitter antenna pointing loss (dB)
%8. Transmitter antenna polarization loss (dB)
%9. Atmospheric losses (dB)
%10. Ionospheric losses (dB)
%11. Rain losses
%12. Receiving satellite antenna pointing loss (dB)
%13. Satellite antenna gain (dBi)
%14. Satellite receiver line losses (dB)
%15. Satelllte receiver noise temperature (K)
%16. System data rate (bit per second), THIS IS NOT SYMBOL RATE
%17. Threshold Eb/N0 (dB)
%18. Receiver bandwidth (Hz)
%19. Threshold C/N (dB)
%output:
%1. Earth station EIRP (dbW)
%2. Uplink path_loss (dB)
%3. Isotropic signal level at satellite receiver (dBW)
%4. Satellite G/T (dB/K)
%5. Satellite signal tonoise power density (dBHz)
%6. Satellite receiver Eb/No (dB)
%7. Excess Eb/No (dB)
%8. Satellite receiver C/N (dB)
%9. Excess C/N (dB)
[...
gs_eirp_dbW, ...
path_loss_up, ...
st_rx_pwr, ...
st_g_to_t, ...
st_s_to_no, ...
st_rx_ebno, ...
excess_ebno_up, ...
st_rx_c_to_n, ...
excess_c_to_n_up ...
] = uplink(...
       slant_range, ...
       uplink_carrier_frequency_MHz,...
       uplink_transmitter_input_power_W,...
       transmitter_back_off_power_dB,...
       uplink_transmitter_cable_loss_dB,...
       uplink_transmitter_antenna_gain_dBi,...
       uplink_transmitter_antenna_pointing_loss_dB,...
       uplink_transmitter_antenna_polarization_loss_dB,...
       uplink_atmospheric_losses_dB,...
       uplink_ionospheric_losses_dB,...
       uplink_rain_losses,...
       uplink_receiving_satellite_antenna_pointing_loss_dB,...
       uplink_satellite_antenna_gain_dBi,...
       uplink_satellite_receiver_line_losses_dB,...
       uplink_satelllte_receiver_noise_temperature_K,...
       uplink_system_data_rate_bps,...
       uplink_threshold_Eb_N0_dB,...
       uplink_receiver_bandwidth_Hz,...
       uplink_threshold_C_N_dB...
       );
   
%here you can change the downlink analysis required
%input
downlink_carrier_frequency_MHz = 437.45;
downlink_transmitter_input_power_W = 2;
downlink_transmitter_cable_loss_dB = 2.2;
downlink_transmitter_antenna_gain_dBi = 2.0;
downlink_transmitter_antenna_pointing_loss_dB = 0.3;
downlink_transmitter_antenna_polarization_loss_dB = 0.1;
downlink_atmospheric_losses_dB = 2.1;
downlink_ionospheric_losses_dB = 0.4;
downlink_rain_losses = 0;
downlink_receiving_satellite_antenna_pointing_loss_dB = 0.5;
downlink_satellite_antenna_gain_dBi = 18.5;
downlink_satellite_receiver_line_losses_dB = 2.0;
downlink_satelllte_receiver_noise_temperature_K = 510;
downlink_system_data_rate_bps = 300;
downlink_threshold_Eb_N0_dB = 9.6;
downlink_receiver_bandwidth_Hz = 500;
downlink_threshold_C_N_dB = 9.6;

%input:
%1. slant_range from geo.m
%2. carrier frequency (MHz)
%3. satellite transmitter power (dBW)
%4. satellite cable loss
%5. Satellite antenna gain (dBi)
%6. Satellite antenna pointing loss (dB)
%7. Satellite antenna polarization loss (dB)
%8. Atmospheric losses (dB)
%9. Ionospheric losses (dB)
%10. Rain losses
%11. Receiving earth station antenna pointing loss (dB)
%12. Earth station antenna gain (dBi)
%11. Earth station receiver line losses (dB)
%14. Earth station receiver noise temperature (K)
%15. System data rate (bit per second), THIS IS NOT SYMBOL RATE
%16. Threshold Eb/N0 (dB)
%17. Receiver bandwidth (Hz)
%18. Threshold S/N (dB)
%output:
%1. Transmitting satellite eirp (dBW)
%2. Downlink path loss (dB)
%3. Isotropic signal level at earth station receiver (dBW)
%4. Earth station antenna G/T (dB/K)
%5. Earth station signal tonoise power density (dBHz) 
%6. Earth station receiver Eb/No (dB)
%7. Excess Eb/No (dB)
%8. Earth station receiver C/N (dB)
%9. Excess C/N (dB)
[...
st_eirp_dbW, ...
path_loss_down, ...
gs_rx_pwr_db, ...
gs_g_to_t, ...
gs_s_to_no, ...
gs_rx_ebno, ...
excess_ebno_down, ...
gs_rx_c_to_n, ...
excess_c_to_n_down ...
] = downlink(...
       slant_range,...
       downlink_carrier_frequency_MHz,...
       downlink_transmitter_input_power_W,...
       downlink_transmitter_cable_loss_dB,...
       downlink_transmitter_antenna_gain_dBi,...
       downlink_transmitter_antenna_pointing_loss_dB,...
       downlink_transmitter_antenna_polarization_loss_dB,...
       downlink_atmospheric_losses_dB,...
       downlink_ionospheric_losses_dB,...
       downlink_rain_losses,...
       downlink_receiving_satellite_antenna_pointing_loss_dB,...
       downlink_satellite_antenna_gain_dBi,...
       downlink_satellite_receiver_line_losses_dB,...
       downlink_satelllte_receiver_noise_temperature_K,...
       downlink_system_data_rate_bps,...
       downlink_threshold_Eb_N0_dB,...
       downlink_receiver_bandwidth_Hz,...
       downlink_threshold_C_N_dB...
       );

%save result
save = input("Save result? (y/N): ", 's');
if save == 'y' || save == 'Y'
    description = [...
         "Ground station:";...
         "Ground station transmitter power";...
         "Ground station cable losses";...
         "Ground station antenna gain";...
         "Ground station back off power";...
         "Ground station EIRP";...
         "Uplink path";...
         "Ground station antenna pointing loss";...
         "Ground station antenna polarization losses";...
         "Path loss";...
         "Atmospheric losses";...
         "Ionospheric losses";...
         "Rain losses";...
         "Isotropic signal at satellite";...
         "Satellite (Eb/No):";...
         "Satellite antenna pointing loss";...
         "Satellite antenna gain";...
         "Satellite total cable losses";...
         "Satellite effective noise temperature:";...
         "Satellite G/T:";...
         "Satellite signal-to-noise power density (S/No)";...
         "System desired data rate";...
         "System Eb/No";...
         "Required Eb/No";...
         "Excess margin Eb/No";...
         "Satellite (C/N):";...
         "System C/N";...
         "Receiver bandwidth";...
         "Required C/N";...
         "Excess margin C/N"...
        ]
    unit = [...
         " ";...
         "(W)";...
         "(dB)";...
         "(dBi)";...
         "(dB)";...
         "(dBW)";...
         " ";...
         "(dB)";...
         "(dB)";...
         "(dB)";...
         "(dB)";...
         "(dB)";...
         "(dB)";...
         "(dBW)";...
         "(dB)";...
         "(dB)";...
         "(dBi)";...
         "(dB)";...
         "(K)";...
         "(dB/K)";...
         "(dB)";...
         "(bit/s)";...
         "(dB)";...
         "(dB)";...
         "(dB)";...
         " ";...
         "(dB)";...
         "(Hz)";...
         "(dB)";...
         "(dB)"
        ];
    value = [...
         " ";...
         uplink_transmitter_input_power_W;...
         uplink_transmitter_cable_loss_dB;...
         uplink_transmitter_antenna_gain_dBi;...
         transmitter_back_off_power_dB;...
         gs_eirp_dbW;...
         " ";...
         uplink_transmitter_antenna_pointing_loss_dB;...
         uplink_transmitter_antenna_polarization_loss_dB;...
         path_loss_up;...
         uplink_atmospheric_losses_dB;...
         uplink_ionospheric_losses_dB;...
         uplink_rain_losses;...
         st_rx_pwr;...
         " ";...
         uplink_receiving_satellite_antenna_pointing_loss_dB;...
         uplink_satellite_antenna_gain_dBi;...
         uplink_satellite_receiver_line_losses_dB;...
         uplink_satelllte_receiver_noise_temperature_K;...
         st_g_to_t;...
         st_s_to_no;...
         uplink_system_data_rate_bps;...
         st_rx_ebno;...
         uplink_threshold_Eb_N0_dB;...
         excess_ebno_up;...
         " ";...
         st_rx_c_to_n;...
         uplink_receiver_bandwidth_Hz;...
         uplink_threshold_C_N_dB;...
         excess_c_to_n_up
        ];
    t1 = table(description, unit, value);
    sheet_name1 = sprintf('%s_uplink',input("Name the uplink sheet:", 's'));
    sheet_name2 = sprintf('%s_dwlink',input("Name the downlink sheet:", 's'));
    writetable(t1, 'result.xls', 'Sheet', sheet_name1);
    description = [...
         "Satellite";...
         "Satellite transmitter power";...
         "Satellite cable losses";...
         "Satellite antenna gain";...
         "Satellite EIRP";...
         "Downlink path";...
         "Satellite antenna pointing loss";...
         "Satellite antenna polarization losses";...
         "Path loss";...
         "Atmospheric losses";...
         "Ionospheric losses";...
         "Rain losses";...
         "Isotropic signal at satellite";...
         "Earth station (Eb/No)";...
         "Earth station antenna pointing loss";...
         "Earth station antenna gain";...
         "Earth station total cable losses";...
         "Earth station effective noise temperature:";...
         "Earth station G/T:";...
         "Earth station signal-to-noise power density (S/No)";...
         "System desired data rate";...
         "System Eb/No";...
         "Required Eb/No";...
         "Excess margin Eb/No";...
         "Earth station (S/N)";...
         "System C/N";...
         "Receiver bandwidth";...
         "Required C/N";...
         "Excess margin C/N"...
        ]
     unit = [...
         " ";...
         "(W)";...
         "(dB)";...
         "(dBi)";...
         "(dBW)";...
         " ";...
         "(dB)";...
         "(dB)";...
         "(dB)";...
         "(dB)";...
         "(dB)";...
         "(dB)";...
         "(dBW)";...
         "(dB)";...
         "(dB)";...
         "(dBi)";...
         "(dB)";...
         "(K)";...
         "(dB/K)";...
         "(dB)";...
         "(bit/s)";...
         "(dB)";...
         "(dB)";...
         "(dB)";...
         " ";...
         "(dB)";...
         "(Hz)";...
         "(dB)";...
         "(dB)"
        ];
    value = [...
         " ";...
         downlink_transmitter_input_power_W;...
         downlink_transmitter_cable_loss_dB;...
         downlink_transmitter_antenna_gain_dBi;...       
         st_eirp_dbW;...
         " ";...
         downlink_transmitter_antenna_pointing_loss_dB;...
         downlink_transmitter_antenna_polarization_loss_dB;...
         path_loss_down;...
         downlink_atmospheric_losses_dB;...
         downlink_ionospheric_losses_dB;...
         downlink_rain_losses;...
         gs_rx_pwr_db;...
         " ";...
         downlink_receiving_satellite_antenna_pointing_loss_dB;...
         downlink_satellite_antenna_gain_dBi;...
         downlink_satellite_receiver_line_losses_dB;...
         downlink_satelllte_receiver_noise_temperature_K;...
         gs_g_to_t;...
         gs_s_to_no;...
         downlink_system_data_rate_bps;...
         gs_rx_ebno;...
         downlink_threshold_Eb_N0_dB;...
         excess_ebno_down;...
         " ";...
         gs_rx_c_to_n;...
         downlink_receiver_bandwidth_Hz;...
         downlink_threshold_C_N_dB;...
         excess_c_to_n_down
        ];
    t2 = table(description, unit, value);
    writetable(t2, 'result.xls', 'Sheet', sheet_name2);
end

% close all;
% EbNodB = -4:0.5:24;
% EbNo = 10.^(EbNodB./10);
% colors={'k-*', 'g-o', 'c-s', 'm-s', 'y-*', 'k-p', 'b:s', 'm:d', 'g:p'};
% index = 1;
% 
% %BPSK
% BPSK = 0.5*erfc(sqrt(EbNo));
% plot(EbNodB, log10(BPSK), char(colors(index)));
% hold on;
% index = index + 1;
% 
% %M-PSK
% m = 2:1:5; %bit per symbol (e.g. a = 00, b = 01)
% M = 2.^m; %# of possible symbol (a, b, c, d for bit = 2)
% for j1 = M %4- or QPSK, 8PSK, 16PSK, 32PSK
%     k = log2(j1);
%     MPSK = 1/k*erfc(sqrt(EbNo*k)*sin(pi/j1));
%     plot(EbNodB, log10(MPSK), char(colors(index)));
%     index = index + 1;
% end
% 
% %M-QAM (m = even)
% m = 2:2:4;
% M = 2.^m;
% for j1 = M %4- or QAM, 16QAM
%     k = log2(j1);
%     MQAM = (2/k)*(1-1/sqrt(j1))*erfc(sqrt(1.5*EbNo*k/(j1-1)));
%     plot(EbNodB, log10(MQAM), char(colors(index)));
%     index = index + 1;
% end
% 
% %D-BPSK
% DBPSK = 0.5*exp(-1.*EbNo);
% plot(EbNodB, log10(DBPSK), char(colors(index)));
% hold on;
% 
% legend('BPSK', 'QPSK', '8-PSK', '16-PSK', '32-PSK', '4-QAM', '16-QAM', 'DPSK');
% axis([-4 24 -8 0]);
% ylabel('log10(BER)');
% xlabel('Eb/No (dB)');
% title('Probability of BER Error Log10(BER) Vs Eb/No (dB)');
% grid on;
